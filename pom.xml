<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>net.schwitzkroko</groupId>
  <artifactId>xmlresume-build</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>resume-xml-build</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    
    <xmlresume.version.tag>1_5_1</xmlresume.version.tag>
    
    
    <!-- The name and extension of the XML file containing your resume -->
    <transform.in.resume>example2</transform.in.resume>
    <transform.in.resume.folder>${basedir}/src/main/xml/resume-${xmlresume.version.tag}/examples</transform.in.resume.folder>
    <transform.in.resume.extension>xml</transform.in.resume.extension>
    
    
    <!-- Options: br de fr it nl uk us es -->
    <transform.xsl.country>us</transform.xsl.country>
    <!-- Options: letter for country=us, a4 for others -->
    <transform.xsl.papersize>letter</transform.xsl.papersize>
    <transform.xsl.base>${basedir}/src/main/build/resume-${xmlresume.version.tag}/xsl</transform.xsl.base>


    <!-- 
    ================================================================
         Processing Software:
    ================================================================ -->
   <!-- <transform.xsl.processor>org.apache.xalan.xslt.Process</transform.xsl.processor> -->
   <!-- <transform.pdf.processor>org.apache.fop.apps.Fop</transform.pdf.processor> -->
      
      
    <!-- 
    RTF generation currently requires you download a separate, 
    closed-source jar file and add it to your java classpath: 
    http://www.xmlmind.com/foconverter/downloadperso.shtml -->
    <transform.rtf.processor>com.xmlmind.fo.converter.Driver</transform.rtf.processor>

    <!-- You may have some luck with JFOR, an open source FO to RTF Converter: -->
    <!-- <transform.rtf.processor>ch.codeconsult.jfor.main.CmdLineConverter</transform.rtf.processor> -->


    <!-- Targeting Options:
    
     Element filtering allows you to create targeted resumes.
     You can create your own targets; just specify them in your resume.xml
     file with the "targets" attribute.  In this example, the foodservice
     AND carpentry elements will be included in the output, but not the
     elements targeted to other jobs.  Untargeted elements (those with no
     "targets" attribute) are always included.
     Take a look at example2.xml and try changing the filter targets to get a
     feel for how the filter works. -->
   <transform.filter.processor></transform.filter.processor>
   <transform.filter.targets>foodservice carpentry</transform.filter.targets>
   <transform.filter.extension>-filtered</transform.filter.extension>

    <!--
    ================================================================
         Stylesheets:
    ================================================================ -->
    <transform.xsl.stylesheet.html>${transform.xsl.base}/output/${transform.xsl.country}-html.xsl</transform.xsl.stylesheet.html>
    <transform.xsl.stylesheet.text>${transform.xsl.base}/output/${transform.xsl.country}-text.xsl</transform.xsl.stylesheet.text>
    <transform.xsl.stylesheet.fo>${transform.xsl.base}/output/${transform.xsl.country}-${transform.xsl.papersize}.xsl</transform.xsl.stylesheet.fo>
    
    <transform.output.extension>default_file_ext</transform.output.extension>
    <transform.output.folder>${project.build.directory}</transform.output.folder>

  </properties>

  <build>
    <pluginManagement>
      <plugins>
        <!-- https://mvnrepository.com/artifact/org.codehaus.mojo/xml-maven-plugin -->
        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>xml-maven-plugin</artifactId>
            <version>1.0.1</version>
            <dependencies>
              <!-- https://mvnrepository.com/artifact/net.sf.saxon/Saxon-HE -->
              <dependency>
                  <groupId>net.sf.saxon</groupId>
                  <artifactId>Saxon-HE</artifactId>
                  <!-- <version>9.8.0-6</version> -->
                  <version>9.7.0-20</version>
              </dependency>
            </dependencies>
        </plugin>
        
        <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-assembly-plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        
        <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-antrun-plugin -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.8</version>
            <dependencies>
              <!-- https://mvnrepository.com/artifact/org.apache.xmlgraphics/fop -->
              <dependency>
                  <groupId>org.apache.xmlgraphics</groupId>
                  <artifactId>fop</artifactId>
                  <version>2.2</version>
              </dependency>
            </dependencies>
        </plugin>
        
        
      </plugins>
    </pluginManagement>
    
    <plugins>
    
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>      
            <configuration>
              <outputDirectory>${transform.output.folder}</outputDirectory>
              <resources combine.children="append" >          
                <resource>
                  <directory>src/main/resources</directory>
                  <filtering>false</filtering>
                  <excludes>
                    <exclude>htdocs/**</exclude>
                  </excludes>
                </resource>
              </resources>            
            </configuration>
          </execution>
        </executions>
      </plugin>
  
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>xml-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>transform</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <transformationSets>
            <transformationSet>
              <dir>${transform.in.resume.folder}</dir>
              <includes>
                <include>${transform.in.resume}.${transform.in.resume.extension}</include>
              </includes>
              <stylesheet>${transform.xsl.stylesheet}</stylesheet>
              <outputDir>${transform.output.folder}</outputDir>
              <fileMappers>
                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                  <targetExtension>.${transform.output.extension}</targetExtension>
                </fileMapper>
              </fileMappers>
            </transformationSet>
          </transformationSets>
        </configuration>
      </plugin>
      
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors>
            <descriptor>src/main/build/assembly.xml</descriptor>
          </descriptors>
          <appendAssemblyId>false</appendAssemblyId>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
    </plugins>
    
  </build>

  <profiles>
  
    <profile>
      <id>html</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>    
      <properties>
         <transform.xsl.stylesheet>${transform.xsl.stylesheet.html}</transform.xsl.stylesheet>
         <transform.output.folder>${project.build.directory}/htdocs</transform.output.folder>
         <transform.output.extension>html</transform.output.extension>
      </properties>
      
      <build>
        <plugins>
          <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <executions>
            <execution>
              <id>copy-resources</id>
              <configuration >
                <resources>          
                  <resource>
                    <directory>src/main/resources/htdocs</directory>
                    <filtering>false</filtering>
                  </resource>
                </resources>            
              </configuration>
            </execution>
          </executions>
        </plugin>
        
        </plugins>
      
      </build>
      
    </profile>
    
    <profile>
      <id>text</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
         <transform.xsl.stylesheet>${transform.xsl.stylesheet.text}</transform.xsl.stylesheet>
         <transform.output.extension>txt</transform.output.extension>
      </properties>
    </profile>
    
    
    <profile>
      <id>pdf</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
         <transform.xsl.stylesheet>${transform.xsl.stylesheet.fo}</transform.xsl.stylesheet>
         <transform.output.extension>fo</transform.output.extension>
      </properties>
      
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>pdf</id>
                <phase>process-sources</phase>
                <goals><goal>run</goal></goals>
                <configuration>
                  <target>
                    <taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop"/>
                    <echo message="${transform.output.folder}/example1.${transform.output.extension}"></echo>
                    <fop 
                      fofile="${transform.output.folder}/${transform.in.resume}.${transform.output.extension}"
                      outfile="${transform.output.folder}/${transform.in.resume}.pdf"
                      format="application/pdf"
                      userconfig="${basedir}/src/main/build/fop.conf"
                    />
                  </target>
                </configuration>
              </execution>
            </executions>
          
          </plugin>
        
        
        </plugins>
      
      </build>
      
      
    </profile>
    
    
  </profiles>


</project>
